- hosts: localhost
  connection: local
  gather_facts: False
  tasks:

    - name: Update experiments-setup.properties from group_vars/all config file - dataset_input_file
      lineinfile:
        dest: ../src/main/resources/experiments-setup.properties
        regexp: "^dataset-input-file="
        line: "dataset-input-file={{ dataset_input_file }}"

    - name: Update experiments-setup.properties from group_vars/all config file - s3_bucket
      lineinfile:
        dest: ../src/main/resources/experiments-setup.properties
        regexp: "^external-storage-directory="
        line: "external-storage-directory={{ s3_bucket }}"

    - name: Update experiments-setup.properties from group_vars/all config file - ssh_username
      lineinfile:
        dest: ../src/main/resources/experiments-setup.properties
        regexp: "^ssh-username="
        line: "ssh-username={{ ssh_username }}"

    - name: Update experiments-setup.properties from group_vars/all config file - ssh_private_key_name
      lineinfile:
        dest: ../src/main/resources/experiments-setup.properties
        regexp: "^ssh-private-key-name="
        line: "ssh-private-key-name={{ ssh_private_key_name }}"

    - name: Update experiments-setup.properties from group_vars/all config file - benchmark_suite_file
      lineinfile:
        dest: ../src/main/resources/experiments-setup.properties
        regexp: "^benchmark-suite-file="
        line: "benchmark-suite-file={{ benchmark_suite_file }}"

    - name: Update experiments-setup.properties from group_vars/all config file - local_results_directory
      lineinfile:
        dest: ../src/main/resources/experiments-setup.properties
        regexp: "^local-results-directory="
        line: "local-results-directory={{ local_results_directory }}"

- hosts: tag_ansible_fedora
  user: "{{ ssh_username }}"
  become: yes
  become_user: root
  gather_facts: False
  pre_tasks:
    - raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
    - setup: # aka gather_facts

  tasks:

    - name: Transfer Fedora Bootstrap script
      copy: src=../user_scripts/ubuntu_fedora_bootstrap.sh dest=/ mode=0777

    - name: Run Fedora Bootstrap to install Fedora
      command: ./ubuntu_fedora_bootstrap.sh
      args:
        chdir: /
        creates: fedora-data

- hosts: localhost
  connection: local
  gather_facts: False
  tasks:

    - name: Update experiments-setup.properties with Fedora URL
      lineinfile:
        dest: ../src/main/resources/experiments-setup.properties
        regexp: "^fedora-url="
        line: "fedora-url=http://{{ hostvars[groups['tag_ansible_fedora'][0]]['ec2_ip_address'] }}:8080/fedora/rest"

- hosts: tag_ansible_rabbitmq
  user: "{{ ssh_username }}"
  become: yes
  become_user: root
  gather_facts: False
  pre_tasks:
    - raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
    - setup: # aka gather_facts

  tasks:

    - name: Transfer RabbitMQ Bootstrap script
      copy: src=../user_scripts/ubuntu_rabbitmq_bootstrap.sh dest=/ mode=0777

    - name: Run RabbitMQ Bootstrap to install RabbitMQ
      command: ./ubuntu_rabbitmq_bootstrap.sh
      args:
        chdir: /
        creates: var/lib/rabbitmq

- hosts: localhost
  connection: local
  gather_facts: False
  tasks:

    - name: Update experiments-setup.properties with RabbitMQ host
      lineinfile:
        dest: ../src/main/resources/experiments-setup.properties
        regexp: "^rabbitmq-host="
        line: "rabbitmq-host={{ hostvars[groups['tag_ansible_rabbitmq'][0]]['ec2_ip_address'] }}"

    - name: Update experiments-setup.properties with RabbitMQ username
      lineinfile:
        dest: ../src/main/resources/experiments-setup.properties
        regexp: "^rabbitmq-username="
        line: "rabbitmq-username=admin"

    - name: Update experiments-setup.properties with RabbitMQ password
      lineinfile:
        dest: ../src/main/resources/experiments-setup.properties
        regexp: "^rabbitmq-password="
        line: "rabbitmq-password=admin"

    - name: Update ubuntu_client_bootstrap with RabbitMQ URL
      lineinfile:
        dest: ../user_scripts/ubuntu_client_bootstrap.sh
        regexp: "^RABBITMQ_URL="
        line: "RABBITMQ_URL={{ hostvars[groups['tag_ansible_rabbitmq'][0]]['ec2_ip_address'] }}"

- hosts: tag_ansible_client
  user: "{{ ssh_username }}"
  become: yes
  become_user: root
  gather_facts: False
  pre_tasks:
    - raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
    - setup: # aka gather_facts

  tasks:

    - name: Transfer Client Bootstrap script
      copy: src=../user_scripts/ubuntu_client_bootstrap.sh dest=/ mode=0777

    - name: Run Client Bootstrap to install supervisord and start experiment orchestrator
      command: ./ubuntu_client_bootstrap.sh
      args:
        chdir: /
        creates: etc/supervisord.conf

- hosts: localhost
  connection: local
  gather_facts: False
  tasks:

    - name: Update experiments-setup.properties with workers public IPs
      lineinfile:
        dest: ../src/main/resources/experiments-setup.properties
        regexp: "^workers-public-ips="
        line: "workers-public-ips={% for ip in groups['tag_ansible_client'] %}{{hostvars[ip]['ec2_ip_address']}}{% if not loop.last %},{% endif %}{% endfor %}"

    - name: Clear ubuntu_client_bootstrap RabbitMQ URL
      lineinfile:
        dest: ../user_scripts/ubuntu_client_bootstrap.sh
        regexp: "^RABBITMQ_URL="
        line: "RABBITMQ_URL="